// <auto-generated />
using System;
using ApartmentManagement.DataAccess.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApartmentManagement.DataAccess.Migrations
{
    [DbContext(typeof(ApartmentManagementDbContext))]
    [Migration("20211021202254_add-user")]
    partial class adduser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Block")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Door")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOwner")
                        .HasColumnType("bit");

                    b.Property<int?>("OccupantId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("OccupantId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.ChatGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<int>("OccupantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId")
                        .IsUnique();

                    b.HasIndex("OccupantId")
                        .IsUnique();

                    b.ToTable("ChatGroups");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("InvoiceTypeId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.InvoiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aidat"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Elektrik"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Su"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Doğalgaz"
                        });
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varbinary(128)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Kenân",
                            PasswordHash = new byte[] { 188, 157, 223, 146, 228, 212, 57, 210, 58, 46, 72, 148, 55, 62, 147, 70, 182, 136, 194, 160, 94, 240, 87, 79, 176, 140, 68, 111, 144, 109, 105, 53, 209, 86, 228, 196, 171, 5, 132, 31, 204, 238, 170, 158, 3, 137, 5, 151, 232, 23, 88, 60, 145, 131, 36, 174, 248, 181, 173, 26, 51, 252, 22, 85 },
                            PasswordSalt = new byte[] { 80, 136, 226, 28, 66, 179, 211, 114, 63, 42, 129, 248, 40, 53, 81, 215, 75, 248, 23, 125, 217, 110, 91, 179, 103, 60, 11, 206, 174, 113, 103, 245, 26, 238, 188, 215, 12, 137, 194, 227, 97, 183, 165, 252, 88, 101, 72, 25, 112, 59, 55, 203, 227, 231, 137, 244, 123, 133, 21, 120, 232, 111, 13, 107, 235, 173, 209, 219, 114, 23, 227, 105, 216, 9, 68, 89, 85, 211, 229, 17, 72, 196, 52, 60, 106, 146, 7, 114, 182, 164, 13, 42, 102, 106, 80, 129, 11, 180, 91, 232, 206, 249, 11, 159, 247, 53, 144, 30, 192, 51, 52, 174, 95, 255, 186, 172, 9, 32, 242, 44, 5, 61, 113, 75, 106, 194, 183, 62 }
                        });
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChatGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ChatGroupId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Occupant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarPlate")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsCarOwner")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varbinary(128)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Occupants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarPlate = "EY 146",
                            FullName = "Servet",
                            IdentityNumber = "48704870487",
                            IsCarOwner = true,
                            IsDeleted = false,
                            Mail = "mservetankarali@gmail.com",
                            PasswordHash = new byte[] { 174, 23, 0, 164, 10, 248, 54, 59, 209, 71, 231, 151, 74, 174, 17, 177, 100, 72, 82, 206, 43, 17, 119, 199, 20, 213, 99, 146, 5, 32, 1, 27, 20, 45, 90, 55, 10, 7, 180, 233, 74, 104, 192, 183, 60, 218, 36, 26, 18, 204, 35, 154, 243, 116, 58, 174, 81, 99, 101, 171, 54, 117, 207, 199 },
                            PasswordSalt = new byte[] { 242, 240, 35, 238, 166, 53, 24, 228, 63, 240, 55, 249, 215, 40, 59, 197, 99, 65, 143, 99, 57, 161, 184, 30, 123, 151, 163, 53, 56, 33, 24, 238, 146, 223, 164, 110, 192, 182, 195, 119, 154, 41, 144, 153, 205, 22, 233, 246, 205, 66, 85, 135, 57, 107, 81, 14, 203, 62, 79, 219, 233, 137, 176, 161, 102, 97, 161, 1, 9, 100, 247, 24, 1, 55, 116, 133, 186, 54, 115, 151, 195, 100, 168, 213, 129, 123, 58, 44, 28, 171, 240, 28, 140, 183, 43, 93, 166, 145, 23, 220, 245, 148, 123, 11, 243, 254, 50, 82, 54, 145, 163, 94, 82, 72, 225, 234, 191, 201, 254, 80, 11, 102, 91, 75, 44, 226, 45, 175 },
                            PhoneNumber = "541 969 2951"
                        });
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Apartment", b =>
                {
                    b.HasOne("ApartmentManagement.Entities.Models.Occupant", "Occupant")
                        .WithMany("Apartments")
                        .HasForeignKey("OccupantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Occupant");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.ChatGroup", b =>
                {
                    b.HasOne("ApartmentManagement.Entities.Models.Manager", "Manager")
                        .WithOne("ChatGroup")
                        .HasForeignKey("ApartmentManagement.Entities.Models.ChatGroup", "ManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApartmentManagement.Entities.Models.Occupant", "Occupant")
                        .WithOne("ChatGroup")
                        .HasForeignKey("ApartmentManagement.Entities.Models.ChatGroup", "OccupantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Occupant");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Invoice", b =>
                {
                    b.HasOne("ApartmentManagement.Entities.Models.Apartment", "Apartment")
                        .WithMany("Invoices")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApartmentManagement.Entities.Models.InvoiceType", "InvoiceType")
                        .WithMany("Invoices")
                        .HasForeignKey("InvoiceTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("InvoiceType");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Message", b =>
                {
                    b.HasOne("ApartmentManagement.Entities.Models.ChatGroup", "ChatGroup")
                        .WithMany("Messages")
                        .HasForeignKey("ChatGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChatGroup");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Apartment", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.ChatGroup", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.InvoiceType", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Manager", b =>
                {
                    b.Navigation("ChatGroup");
                });

            modelBuilder.Entity("ApartmentManagement.Entities.Models.Occupant", b =>
                {
                    b.Navigation("Apartments");

                    b.Navigation("ChatGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
